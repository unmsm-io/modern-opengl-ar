---
import TableOfContents from "../components/TableOfContents.astro";
import BaseLayout from "./BaseLayout.astro";
import { WORKSHOP_CONFIG } from "../config/workshop";
import { ChevronLeft, Clock, GitBranch, ExternalLink } from "lucide-astro";

interface Props {
  frontmatter: {
    id: string; // step0-setup
    tag: string; // git tag
    title: string;
    summary: string;
    durationMin: number; // minutos estimados
    files: string[];
    path: string; // ruta relativa para href
    author: string;
    authorImageUrl: string;
    pubDate: string;
  };
  id: string;
  headings: {
    slug: string;
    text: string;
    depth: number;
  }[];
}

const { frontmatter, id, headings } = Astro.props;

// Find the corresponding step in WORKSHOP_CONFIG for additional info
const configStep = WORKSHOP_CONFIG.steps.find(
  (step) => step.id === frontmatter.id,
);

// Get step number from the array
const stepIndex = WORKSHOP_CONFIG.steps.findIndex(
  (step) => step.id === frontmatter.id,
);
const stepNumber = stepIndex >= 0 ? stepIndex + 1 : null;

// Format date
const formattedDate = new Date(frontmatter.pubDate).toLocaleDateString(
  "es-PE",
  {
    year: "numeric",
    month: "long",
    day: "numeric",
  },
);

const isoDate = new Date(frontmatter.pubDate).toISOString();

// Navigation helpers
const prevStep = stepIndex > 0 ? WORKSHOP_CONFIG.steps[stepIndex - 1] : null;
const nextStep =
  stepIndex < WORKSHOP_CONFIG.steps.length - 1
    ? WORKSHOP_CONFIG.steps[stepIndex + 1]
    : null;

// SEO-specific data
const stepDescription = `${frontmatter.summary} - Paso ${stepNumber} del taller de OpenGL AR. Duración: ${frontmatter.durationMin} minutos. Archivos: ${frontmatter.files.join(", ")}.`;
const stepKeywords = [
  "OpenGL",
  "Realidad Aumentada",
  "C++",
  "Tutorial",
  frontmatter.tag,
  `Paso ${stepNumber}`,
  "Workshop",
  "UNMSM",
  "Computer Graphics",
  "ArUco",
  "OpenCV",
  ...frontmatter.files.map((file) => file.replace(/\.[^/.]+$/, "")), // Remove extensions
];

// Canonical URL for this step
const canonical = `https://modern-opengl-ar.vercel.app/steps/${frontmatter.id}`;

// Enhanced structured data for the step
const stepStructuredData = {
  "@context": "https://schema.org",
  "@type": "LearningResource",
  name: frontmatter.title,
  description: stepDescription,
  author: {
    "@type": "Person",
    name: frontmatter.author,
    jobTitle: WORKSHOP_CONFIG.speaker.role,
    image: `https://modern-opengl-ar.vercel.app${frontmatter.authorImageUrl}`,
    url: WORKSHOP_CONFIG.speaker.social.github,
    sameAs: [
      WORKSHOP_CONFIG.speaker.social.github,
      WORKSHOP_CONFIG.speaker.social.linkedin,
      WORKSHOP_CONFIG.speaker.social.twitter,
    ],
  },
  datePublished: isoDate,
  dateModified: isoDate,
  inLanguage: "es-PE",
  learningResourceType: "Tutorial",
  educationalLevel: "intermediate",
  timeRequired: `PT${frontmatter.durationMin}M`,
  teaches: [
    frontmatter.title,
    "OpenGL programming",
    "Augmented Reality development",
  ],
  isPartOf: {
    "@type": "Course",
    name: WORKSHOP_CONFIG.title,
    description: WORKSHOP_CONFIG.subtitle,
    provider: {
      "@type": "Organization",
      name: "FISI - Universidad Nacional Mayor de San Marcos",
    },
  },
  codeRepository: `${WORKSHOP_CONFIG.repository.url}/tree/${frontmatter.tag}`,
  programmingLanguage: "C++",
  position: stepNumber,
  hasPart: frontmatter.files.map((file) => ({
    "@type": "SoftwareSourceCode",
    name: file,
    programmingLanguage: file.endsWith(".cpp")
      ? "C++"
      : file.endsWith(".h") || file.endsWith(".hpp")
        ? "C++"
        : file.endsWith(".glsl") ||
            file.endsWith(".vert") ||
            file.endsWith(".frag")
          ? "GLSL"
          : "Text",
  })),
};

// Breadcrumb structured data
const breadcrumbStructuredData = {
  "@context": "https://schema.org",
  "@type": "BreadcrumbList",
  itemListElement: [
    {
      "@type": "ListItem",
      position: 1,
      name: "Inicio",
      item: "https://modern-opengl-ar.vercel.app",
    },
    {
      "@type": "ListItem",
      position: 2,
      name: "Pasos del Taller",
      item: "https://modern-opengl-ar.vercel.app/steps",
    },
    {
      "@type": "ListItem",
      position: 3,
      name: frontmatter.title,
      item: canonical,
    },
  ],
};
---

<BaseLayout
  title={frontmatter.title}
  description={stepDescription}
  type="article"
  publishedTime={isoDate}
  modifiedTime={isoDate}
  author={frontmatter.author}
  keywords={stepKeywords}
  canonical={canonical}
  image="/og.webp"
>
  <article
    class="prose dark:prose-invert max-w-none
    prose-table:border-collapse prose-table:w-full
    prose-thead:border-b prose-thead:border-zinc-200 dark:prose-thead:border-zinc-700
    prose-th:py-2 prose-th:px-4 prose-th:text-left prose-th:font-semibold prose-th:bg-zinc-50 dark:prose-th:bg-zinc-800
    prose-td:py-2 prose-td:px-4 prose-td:border-b prose-td:border-zinc-200 dark:prose-td:border-zinc-700
    prose-tr:hover:bg-zinc-50 dark:prose-tr:hover:bg-zinc-800/50
    prose-tr:transition-colors prose-tr:duration-200"
    itemscope
    itemtype="https://schema.org/LearningResource"
  >
    <!-- Additional Step-specific Structured Data -->
    <script
      type="application/ld+json"
      set:html={JSON.stringify(stepStructuredData)}
    />
    <script
      type="application/ld+json"
      set:html={JSON.stringify(breadcrumbStructuredData)}
    />

    <meta itemprop="datePublished" content={isoDate} />
    <meta itemprop="dateModified" content={isoDate} />
    <meta itemprop="timeRequired" content={`PT${frontmatter.durationMin}M`} />
    <meta itemprop="learningResourceType" content="Tutorial" />
    <meta itemprop="educationalLevel" content="intermediate" />
    <meta itemprop="inLanguage" content="es-PE" />
    <meta itemprop="position" content={stepNumber?.toString()} />
    <meta itemprop="keywords" content={stepKeywords.join(", ")} />

    <!-- Header Section -->
    <div class="max-w-4xl mx-auto !mb-8">
      {
        stepNumber && (
          <div class="flex justify-center pt-10 pb-2">
            <span class="px-3 py-1 text-xs font-semibold border border-zinc-300 dark:border-zinc-600 text-black dark:text-white bg-white dark:bg-zinc-800 rounded-full">
              Paso {stepNumber}
            </span>
          </div>
        )
      }

      <h1
        class="flex justify-center text-5xl leading-tight tracking-tight !mx-auto !text-center font-semibold mb-4 pt-4"
        itemprop="name"
      >
        {frontmatter.title}
      </h1>

      <p
        class="text-xl text-zinc-600 dark:text-zinc-300 text-center mb-6 !mx-auto max-w-3xl"
        itemprop="description"
      >
        {frontmatter.summary}
      </p>

      <!-- Meta Information -->
      <div
        class="flex items-center justify-center gap-6 text-sm text-zinc-500 dark:text-zinc-400 mb-6"
      >
        <div
          class="flex items-center gap-2"
          itemprop="author"
          itemscope
          itemtype="https://schema.org/Person"
        >
          <img
            src={frontmatter.authorImageUrl}
            alt={frontmatter.author}
            class="size-6 !m-0 rounded-full"
            itemprop="image"
          />
          <span class="!m-0 font-medium">
            <meta itemprop="name" content={frontmatter.author} />
            <meta itemprop="jobTitle" content={WORKSHOP_CONFIG.speaker.role} />
            <meta
              itemprop="url"
              content={WORKSHOP_CONFIG.speaker.social.github}
            />
            {frontmatter.author}
          </span>
        </div>

        <span class="text-zinc-400">·</span>

        <div class="flex items-center gap-1">
          <Clock class="w-4 h-4" />
          <span itemprop="timeRequired">{frontmatter.durationMin} min</span>
        </div>

        <span class="text-zinc-400">·</span>

        <time
          datetime={isoDate}
          class="text-zinc-500 dark:text-zinc-400"
          itemprop="datePublished"
        >
          {formattedDate}
        </time>
      </div>

      <!-- Git Tag and Repository Links -->
      <div class="flex items-center justify-center gap-4 mb-8">
        <div
          class="flex items-center gap-2 bg-zinc-100 dark:bg-zinc-800 px-3 py-2 rounded"
        >
          <GitBranch class="w-4 h-4 text-zinc-500" />
          <span class="text-sm text-zinc-600 dark:text-zinc-400">Tag:</span>
          <code
            class="text-sm font-mono text-zinc-700 dark:text-zinc-300"
            itemprop="version"
          >
            {frontmatter.tag}
          </code>
        </div>

        <a
          href={`${WORKSHOP_CONFIG.repository.url}/tree/${frontmatter.tag}`}
          target="_blank"
          rel="noopener noreferrer"
          class="inline-flex items-center gap-2 bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700 transition-colors text-sm font-medium no-underline"
          itemprop="codeRepository"
        >
          <ExternalLink class="w-4 h-4" />
          Ver código
        </a>

        {
          frontmatter.path && (
            <a
              href={`${WORKSHOP_CONFIG.repository.url}/tree/${frontmatter.tag}/${frontmatter.path}`}
              target="_blank"
              rel="noopener noreferrer"
              class="inline-flex items-center gap-2 border border-zinc-300 dark:border-zinc-600 text-zinc-700 dark:text-zinc-300 px-4 py-2 rounded hover:bg-zinc-50 dark:hover:bg-zinc-800 transition-colors text-sm no-underline"
            >
              <ExternalLink class="w-4 h-4" />
              Directorio
            </a>
          )
        }
      </div>

      <!-- Files Section -->
      {
        frontmatter.files && frontmatter.files.length > 0 && (
          <div class="bg-zinc-50 dark:bg-zinc-800/50 border border-zinc-200 dark:border-zinc-700 rounded-lg p-4 mb-8">
            <h3 class="text-sm font-medium text-zinc-700 dark:text-zinc-300 mb-3 !mt-0">
              Archivos principales del paso:
            </h3>
            <div class="flex flex-wrap gap-2" itemprop="hasPart">
              {frontmatter.files.map((file) => (
                <code
                  class="bg-white dark:bg-zinc-700 text-zinc-700 dark:text-zinc-300 px-3 py-1 rounded text-sm border border-zinc-200 dark:border-zinc-600"
                  itemscope
                  itemtype="https://schema.org/SoftwareSourceCode"
                >
                  <meta itemprop="name" content={file} />
                  <meta
                    itemprop="programmingLanguage"
                    content={
                      file.endsWith(".cpp")
                        ? "C++"
                        : file.endsWith(".h") || file.endsWith(".hpp")
                          ? "C++"
                          : file.endsWith(".glsl") ||
                              file.endsWith(".vert") ||
                              file.endsWith(".frag")
                            ? "GLSL"
                            : "Text"
                    }
                  />
                  {file}
                </code>
              ))}
            </div>
          </div>
        )
      }
    </div>

    <!-- Content -->
    <div class="space-y-6 max-w-4xl mx-auto scroll-smooth" itemprop="text">
      <TableOfContents headings={headings} />
      <slot />
    </div>

    <!-- Step Navigation -->
    <nav
      class="mt-12 pt-6 border-t border-zinc-200 dark:border-zinc-800"
      role="navigation"
      aria-label="Navegación entre pasos"
    >
      <div class="flex items-center justify-between max-w-4xl mx-auto">
        <div class="flex items-center gap-4">
          <a
            href="/steps"
            class="text-blue-600 dark:text-blue-400 hover:underline inline-flex items-center gap-1 text-sm"
            rel="up"
          >
            <ChevronLeft class="w-3.5 h-3.5" />
            Todos los pasos
          </a>

          {
            prevStep && (
              <a
                href={`/steps/${prevStep.id}`}
                class="text-zinc-600 dark:text-zinc-400 hover:text-blue-600 dark:hover:text-blue-400 hover:underline inline-flex items-center gap-1 text-sm"
                rel="prev"
                title={`Paso anterior: ${prevStep.title}`}
              >
                ← {prevStep.title}
              </a>
            )
          }
        </div>

        {
          nextStep && (
            <a
              href={`/steps/${nextStep.id}`}
              class="text-zinc-600 dark:text-zinc-400 hover:text-blue-600 dark:hover:text-blue-400 hover:underline inline-flex items-center gap-1 text-sm"
              rel="next"
              title={`Siguiente paso: ${nextStep.title}`}
            >
              {nextStep.title} →
            </a>
          )
        }
      </div>
    </nav>
  </article>
</BaseLayout>
